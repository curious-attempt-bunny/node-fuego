# Makefile.in generated by automake 1.10 from Makefile.am.
# go/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




VPATH = ../../../go
pkgdatadir = $(datadir)/fuego
pkglibdir = $(libdir)/fuego
pkgincludedir = $(includedir)/fuego
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i386-apple-darwin11.4.2
host_triplet = i386-apple-darwin11.4.2
subdir = go
DIST_COMMON = $(noinst_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_boost_base.m4 \
	$(top_srcdir)/m4/ax_boost_date_time.m4 \
	$(top_srcdir)/m4/ax_boost_filesystem.m4 \
	$(top_srcdir)/m4/ax_boost_program_options.m4 \
	$(top_srcdir)/m4/ax_boost_system.m4 \
	$(top_srcdir)/m4/ax_boost_thread.m4 \
	$(top_srcdir)/m4/ax_boost_unit_test_framework.m4 \
	$(top_srcdir)/m4/ax_cflags_gcc_option.m4 \
	$(top_srcdir)/m4/ax_cflags_warn_all.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
LIBRARIES = $(noinst_LIBRARIES)
AR = ar
ARFLAGS = cru
libfuego_go_a_AR = $(AR) $(ARFLAGS)
libfuego_go_a_LIBADD =
am_libfuego_go_a_OBJECTS = libfuego_go_a-GoAutoBook.$(OBJEXT) \
	libfuego_go_a-GoBensonSolver.$(OBJEXT) \
	libfuego_go_a-GoBlock.$(OBJEXT) \
	libfuego_go_a-GoBoard.$(OBJEXT) \
	libfuego_go_a-GoBoardCheckPerformance.$(OBJEXT) \
	libfuego_go_a-GoBoardHistory.$(OBJEXT) \
	libfuego_go_a-GoBoardRestorer.$(OBJEXT) \
	libfuego_go_a-GoBoardSynchronizer.$(OBJEXT) \
	libfuego_go_a-GoBoardUpdater.$(OBJEXT) \
	libfuego_go_a-GoBoardUtil.$(OBJEXT) \
	libfuego_go_a-GoBook.$(OBJEXT) libfuego_go_a-GoChain.$(OBJEXT) \
	libfuego_go_a-GoEyeCount.$(OBJEXT) \
	libfuego_go_a-GoEyeUtil.$(OBJEXT) \
	libfuego_go_a-GoGame.$(OBJEXT) \
	libfuego_go_a-GoGtpCommandUtil.$(OBJEXT) \
	libfuego_go_a-GoGtpEngine.$(OBJEXT) \
	libfuego_go_a-GoGtpExtraCommands.$(OBJEXT) \
	libfuego_go_a-GoInfluence.$(OBJEXT) \
	libfuego_go_a-GoInit.$(OBJEXT) libfuego_go_a-GoKomi.$(OBJEXT) \
	libfuego_go_a-GoLadder.$(OBJEXT) \
	libfuego_go_a-GoMotive.$(OBJEXT) \
	libfuego_go_a-GoNodeUtil.$(OBJEXT) \
	libfuego_go_a-GoPlayer.$(OBJEXT) \
	libfuego_go_a-GoPlayerMove.$(OBJEXT) \
	libfuego_go_a-GoRegion.$(OBJEXT) \
	libfuego_go_a-GoRegionBoard.$(OBJEXT) \
	libfuego_go_a-GoRegionUtil.$(OBJEXT) \
	libfuego_go_a-GoRules.$(OBJEXT) \
	libfuego_go_a-GoSafetyCommands.$(OBJEXT) \
	libfuego_go_a-GoSafetySolver.$(OBJEXT) \
	libfuego_go_a-GoSafetyUtil.$(OBJEXT) \
	libfuego_go_a-GoSearch.$(OBJEXT) \
	libfuego_go_a-GoSetupUtil.$(OBJEXT) \
	libfuego_go_a-GoStaticLadder.$(OBJEXT) \
	libfuego_go_a-GoStaticSafetySolver.$(OBJEXT) \
	libfuego_go_a-GoTimeControl.$(OBJEXT) \
	libfuego_go_a-GoTimeSettings.$(OBJEXT) \
	libfuego_go_a-GoUtil.$(OBJEXT)
libfuego_go_a_OBJECTS = $(am_libfuego_go_a_OBJECTS)
DEFAULT_INCLUDES = -I. -I$(top_builddir) -I$(srcdir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
SOURCES = $(libfuego_go_a_SOURCES)
DIST_SOURCES = $(libfuego_go_a_SOURCES)
HEADERS = $(noinst_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /Users/merlyn/fun/node-fuego/fuego-code/trunk/missing --run aclocal-1.10
AMTAR = ${SHELL} /Users/merlyn/fun/node-fuego/fuego-code/trunk/missing --run tar
AUTOCONF = ${SHELL} /Users/merlyn/fun/node-fuego/fuego-code/trunk/missing --run autoconf
AUTOHEADER = ${SHELL} /Users/merlyn/fun/node-fuego/fuego-code/trunk/missing --run autoheader
AUTOMAKE = ${SHELL} /Users/merlyn/fun/node-fuego/fuego-code/trunk/missing --run automake-1.10
AWK = awk
BOOST_CPPFLAGS = -pthread -I/usr/local/include
BOOST_DATE_TIME_LIB = -lboost_date_time-mt
BOOST_FILESYSTEM_LIB = -lboost_filesystem-mt
BOOST_LDFLAGS = -L/usr/local/lib
BOOST_PROGRAM_OPTIONS_LIB = -lboost_program_options-mt
BOOST_SYSTEM_LIB = -lboost_system-mt
BOOST_THREAD_LIB = -lboost_thread-mt
BOOST_UNIT_TEST_FRAMEWORK_LIB = -lboost_unit_test_framework-mt
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -O3 -ffast-math -g -pipe -DNDEBUG -Wall -Wextra
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = \c
ECHO_N = 
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
GREP = /usr/bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = 
LTLIBOBJS = 
MAINT = 
MAKEINFO = ${SHELL} /Users/merlyn/fun/node-fuego/fuego-code/trunk/missing --run makeinfo
MKDIR_P = ../../../install-sh -c -d
OBJEXT = o
PACKAGE = fuego
PACKAGE_BUGREPORT = 
PACKAGE_NAME = fuego
PACKAGE_STRING = fuego 1.1.SVN
PACKAGE_TARNAME = fuego
PACKAGE_VERSION = 1.1.SVN
PATH_SEPARATOR = :
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/sh
STRIP = 
VERSION = 1.1.SVN
abs_builddir = /Users/merlyn/fun/node-fuego/fuego-code/trunk/build/opt/go
abs_srcdir = /Users/merlyn/fun/node-fuego/fuego-code/trunk/build/opt/../../go
abs_top_builddir = /Users/merlyn/fun/node-fuego/fuego-code/trunk/build/opt
abs_top_srcdir = /Users/merlyn/fun/node-fuego/fuego-code/trunk/build/opt/../..
ac_ct_CC = gcc
ac_ct_CXX = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i386-apple-darwin11.4.2
build_alias = 
build_cpu = i386
build_os = darwin11.4.2
build_vendor = apple
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i386-apple-darwin11.4.2
host_alias = 
host_cpu = i386
host_os = darwin11.4.2
host_vendor = apple
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = $(SHELL) /Users/merlyn/fun/node-fuego/fuego-code/trunk/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(top_builddir)/../../install-sh -c -d
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = ../../../go
sysconfdir = ${prefix}/etc
target_alias = 
top_builddir = ..
top_srcdir = ../../..
noinst_LIBRARIES = libfuego_go.a
libfuego_go_a_SOURCES = \
GoAutoBook.cpp \
GoBensonSolver.cpp \
GoBlock.cpp \
GoBoard.cpp \
GoBoardCheckPerformance.cpp \
GoBoardHistory.cpp \
GoBoardRestorer.cpp \
GoBoardSynchronizer.cpp \
GoBoardUpdater.cpp \
GoBoardUtil.cpp \
GoBook.cpp \
GoChain.cpp \
GoEyeCount.cpp \
GoEyeUtil.cpp \
GoGame.cpp \
GoGtpCommandUtil.cpp \
GoGtpEngine.cpp \
GoGtpExtraCommands.cpp \
GoInfluence.cpp \
GoInit.cpp \
GoKomi.cpp \
GoLadder.cpp \
GoMotive.cpp \
GoNodeUtil.cpp \
GoPlayer.cpp \
GoPlayerMove.cpp \
GoRegion.cpp \
GoRegionBoard.cpp \
GoRegionUtil.cpp \
GoRules.cpp \
GoSafetyCommands.cpp \
GoSafetySolver.cpp \
GoSafetyUtil.cpp \
GoSearch.cpp \
GoSetupUtil.cpp \
GoStaticLadder.cpp \
GoStaticSafetySolver.cpp \
GoTimeControl.cpp \
GoTimeSettings.cpp \
GoUtil.cpp

noinst_HEADERS = \
GoAssertBoardRestored.h \
GoAutoBook.h \
GoBensonSolver.h \
GoBlock.h \
GoBoard.h \
GoBoardCheckPerformance.h \
GoBoardHistory.h \
GoBoardRestorer.h \
GoBoardSynchronizer.h \
GoBoardUpdater.h \
GoBoardUtil.h \
GoBook.h \
GoChain.h \
GoEyeCount.h \
GoEyeUtil.h \
GoGame.h \
GoGtpCommandUtil.h \
GoGtpEngine.h \
GoGtpExtraCommands.h \
GoInfluence.h \
GoInit.h \
GoKomi.h \
GoLadder.h \
GoModBoard.h \
GoMotive.h \
GoMoveExecutor.h \
GoNodeUtil.h \
GoPlayer.h \
GoPlayerMove.h \
GoRegion.h \
GoRegionBoard.h \
GoRegionUtil.h \
GoRules.h \
GoSafetyCommands.h \
GoSafetySolver.h \
GoSafetyUtil.h \
GoSearch.h \
GoSetup.h \
GoSetupUtil.h \
GoSortedMoves.h \
GoStaticLadder.h \
GoStaticSafetySolver.h \
GoTimeControl.h \
GoTimeSettings.h \
GoUtil.h

libfuego_go_a_CPPFLAGS = \
$(BOOST_CPPFLAGS) \
-I../../../gtpengine \
-I../../../smartgame

DISTCLEANFILES = *~
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  go/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  go/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
libfuego_go.a: $(libfuego_go_a_OBJECTS) $(libfuego_go_a_DEPENDENCIES) 
	-rm -f libfuego_go.a
	$(libfuego_go_a_AR) libfuego_go.a $(libfuego_go_a_OBJECTS) $(libfuego_go_a_LIBADD)
	$(RANLIB) libfuego_go.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libfuego_go_a-GoAutoBook.Po
include ./$(DEPDIR)/libfuego_go_a-GoBensonSolver.Po
include ./$(DEPDIR)/libfuego_go_a-GoBlock.Po
include ./$(DEPDIR)/libfuego_go_a-GoBoard.Po
include ./$(DEPDIR)/libfuego_go_a-GoBoardCheckPerformance.Po
include ./$(DEPDIR)/libfuego_go_a-GoBoardHistory.Po
include ./$(DEPDIR)/libfuego_go_a-GoBoardRestorer.Po
include ./$(DEPDIR)/libfuego_go_a-GoBoardSynchronizer.Po
include ./$(DEPDIR)/libfuego_go_a-GoBoardUpdater.Po
include ./$(DEPDIR)/libfuego_go_a-GoBoardUtil.Po
include ./$(DEPDIR)/libfuego_go_a-GoBook.Po
include ./$(DEPDIR)/libfuego_go_a-GoChain.Po
include ./$(DEPDIR)/libfuego_go_a-GoEyeCount.Po
include ./$(DEPDIR)/libfuego_go_a-GoEyeUtil.Po
include ./$(DEPDIR)/libfuego_go_a-GoGame.Po
include ./$(DEPDIR)/libfuego_go_a-GoGtpCommandUtil.Po
include ./$(DEPDIR)/libfuego_go_a-GoGtpEngine.Po
include ./$(DEPDIR)/libfuego_go_a-GoGtpExtraCommands.Po
include ./$(DEPDIR)/libfuego_go_a-GoInfluence.Po
include ./$(DEPDIR)/libfuego_go_a-GoInit.Po
include ./$(DEPDIR)/libfuego_go_a-GoKomi.Po
include ./$(DEPDIR)/libfuego_go_a-GoLadder.Po
include ./$(DEPDIR)/libfuego_go_a-GoMotive.Po
include ./$(DEPDIR)/libfuego_go_a-GoNodeUtil.Po
include ./$(DEPDIR)/libfuego_go_a-GoPlayer.Po
include ./$(DEPDIR)/libfuego_go_a-GoPlayerMove.Po
include ./$(DEPDIR)/libfuego_go_a-GoRegion.Po
include ./$(DEPDIR)/libfuego_go_a-GoRegionBoard.Po
include ./$(DEPDIR)/libfuego_go_a-GoRegionUtil.Po
include ./$(DEPDIR)/libfuego_go_a-GoRules.Po
include ./$(DEPDIR)/libfuego_go_a-GoSafetyCommands.Po
include ./$(DEPDIR)/libfuego_go_a-GoSafetySolver.Po
include ./$(DEPDIR)/libfuego_go_a-GoSafetyUtil.Po
include ./$(DEPDIR)/libfuego_go_a-GoSearch.Po
include ./$(DEPDIR)/libfuego_go_a-GoSetupUtil.Po
include ./$(DEPDIR)/libfuego_go_a-GoStaticLadder.Po
include ./$(DEPDIR)/libfuego_go_a-GoStaticSafetySolver.Po
include ./$(DEPDIR)/libfuego_go_a-GoTimeControl.Po
include ./$(DEPDIR)/libfuego_go_a-GoTimeSettings.Po
include ./$(DEPDIR)/libfuego_go_a-GoUtil.Po

.cpp.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

libfuego_go_a-GoAutoBook.o: GoAutoBook.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoAutoBook.o -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoAutoBook.Tpo -c -o libfuego_go_a-GoAutoBook.o `test -f 'GoAutoBook.cpp' || echo '$(srcdir)/'`GoAutoBook.cpp
	mv -f $(DEPDIR)/libfuego_go_a-GoAutoBook.Tpo $(DEPDIR)/libfuego_go_a-GoAutoBook.Po
#	source='GoAutoBook.cpp' object='libfuego_go_a-GoAutoBook.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoAutoBook.o `test -f 'GoAutoBook.cpp' || echo '$(srcdir)/'`GoAutoBook.cpp

libfuego_go_a-GoAutoBook.obj: GoAutoBook.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoAutoBook.obj -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoAutoBook.Tpo -c -o libfuego_go_a-GoAutoBook.obj `if test -f 'GoAutoBook.cpp'; then $(CYGPATH_W) 'GoAutoBook.cpp'; else $(CYGPATH_W) '$(srcdir)/GoAutoBook.cpp'; fi`
	mv -f $(DEPDIR)/libfuego_go_a-GoAutoBook.Tpo $(DEPDIR)/libfuego_go_a-GoAutoBook.Po
#	source='GoAutoBook.cpp' object='libfuego_go_a-GoAutoBook.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoAutoBook.obj `if test -f 'GoAutoBook.cpp'; then $(CYGPATH_W) 'GoAutoBook.cpp'; else $(CYGPATH_W) '$(srcdir)/GoAutoBook.cpp'; fi`

libfuego_go_a-GoBensonSolver.o: GoBensonSolver.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoBensonSolver.o -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoBensonSolver.Tpo -c -o libfuego_go_a-GoBensonSolver.o `test -f 'GoBensonSolver.cpp' || echo '$(srcdir)/'`GoBensonSolver.cpp
	mv -f $(DEPDIR)/libfuego_go_a-GoBensonSolver.Tpo $(DEPDIR)/libfuego_go_a-GoBensonSolver.Po
#	source='GoBensonSolver.cpp' object='libfuego_go_a-GoBensonSolver.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoBensonSolver.o `test -f 'GoBensonSolver.cpp' || echo '$(srcdir)/'`GoBensonSolver.cpp

libfuego_go_a-GoBensonSolver.obj: GoBensonSolver.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoBensonSolver.obj -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoBensonSolver.Tpo -c -o libfuego_go_a-GoBensonSolver.obj `if test -f 'GoBensonSolver.cpp'; then $(CYGPATH_W) 'GoBensonSolver.cpp'; else $(CYGPATH_W) '$(srcdir)/GoBensonSolver.cpp'; fi`
	mv -f $(DEPDIR)/libfuego_go_a-GoBensonSolver.Tpo $(DEPDIR)/libfuego_go_a-GoBensonSolver.Po
#	source='GoBensonSolver.cpp' object='libfuego_go_a-GoBensonSolver.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoBensonSolver.obj `if test -f 'GoBensonSolver.cpp'; then $(CYGPATH_W) 'GoBensonSolver.cpp'; else $(CYGPATH_W) '$(srcdir)/GoBensonSolver.cpp'; fi`

libfuego_go_a-GoBlock.o: GoBlock.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoBlock.o -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoBlock.Tpo -c -o libfuego_go_a-GoBlock.o `test -f 'GoBlock.cpp' || echo '$(srcdir)/'`GoBlock.cpp
	mv -f $(DEPDIR)/libfuego_go_a-GoBlock.Tpo $(DEPDIR)/libfuego_go_a-GoBlock.Po
#	source='GoBlock.cpp' object='libfuego_go_a-GoBlock.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoBlock.o `test -f 'GoBlock.cpp' || echo '$(srcdir)/'`GoBlock.cpp

libfuego_go_a-GoBlock.obj: GoBlock.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoBlock.obj -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoBlock.Tpo -c -o libfuego_go_a-GoBlock.obj `if test -f 'GoBlock.cpp'; then $(CYGPATH_W) 'GoBlock.cpp'; else $(CYGPATH_W) '$(srcdir)/GoBlock.cpp'; fi`
	mv -f $(DEPDIR)/libfuego_go_a-GoBlock.Tpo $(DEPDIR)/libfuego_go_a-GoBlock.Po
#	source='GoBlock.cpp' object='libfuego_go_a-GoBlock.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoBlock.obj `if test -f 'GoBlock.cpp'; then $(CYGPATH_W) 'GoBlock.cpp'; else $(CYGPATH_W) '$(srcdir)/GoBlock.cpp'; fi`

libfuego_go_a-GoBoard.o: GoBoard.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoBoard.o -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoBoard.Tpo -c -o libfuego_go_a-GoBoard.o `test -f 'GoBoard.cpp' || echo '$(srcdir)/'`GoBoard.cpp
	mv -f $(DEPDIR)/libfuego_go_a-GoBoard.Tpo $(DEPDIR)/libfuego_go_a-GoBoard.Po
#	source='GoBoard.cpp' object='libfuego_go_a-GoBoard.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoBoard.o `test -f 'GoBoard.cpp' || echo '$(srcdir)/'`GoBoard.cpp

libfuego_go_a-GoBoard.obj: GoBoard.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoBoard.obj -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoBoard.Tpo -c -o libfuego_go_a-GoBoard.obj `if test -f 'GoBoard.cpp'; then $(CYGPATH_W) 'GoBoard.cpp'; else $(CYGPATH_W) '$(srcdir)/GoBoard.cpp'; fi`
	mv -f $(DEPDIR)/libfuego_go_a-GoBoard.Tpo $(DEPDIR)/libfuego_go_a-GoBoard.Po
#	source='GoBoard.cpp' object='libfuego_go_a-GoBoard.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoBoard.obj `if test -f 'GoBoard.cpp'; then $(CYGPATH_W) 'GoBoard.cpp'; else $(CYGPATH_W) '$(srcdir)/GoBoard.cpp'; fi`

libfuego_go_a-GoBoardCheckPerformance.o: GoBoardCheckPerformance.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoBoardCheckPerformance.o -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoBoardCheckPerformance.Tpo -c -o libfuego_go_a-GoBoardCheckPerformance.o `test -f 'GoBoardCheckPerformance.cpp' || echo '$(srcdir)/'`GoBoardCheckPerformance.cpp
	mv -f $(DEPDIR)/libfuego_go_a-GoBoardCheckPerformance.Tpo $(DEPDIR)/libfuego_go_a-GoBoardCheckPerformance.Po
#	source='GoBoardCheckPerformance.cpp' object='libfuego_go_a-GoBoardCheckPerformance.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoBoardCheckPerformance.o `test -f 'GoBoardCheckPerformance.cpp' || echo '$(srcdir)/'`GoBoardCheckPerformance.cpp

libfuego_go_a-GoBoardCheckPerformance.obj: GoBoardCheckPerformance.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoBoardCheckPerformance.obj -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoBoardCheckPerformance.Tpo -c -o libfuego_go_a-GoBoardCheckPerformance.obj `if test -f 'GoBoardCheckPerformance.cpp'; then $(CYGPATH_W) 'GoBoardCheckPerformance.cpp'; else $(CYGPATH_W) '$(srcdir)/GoBoardCheckPerformance.cpp'; fi`
	mv -f $(DEPDIR)/libfuego_go_a-GoBoardCheckPerformance.Tpo $(DEPDIR)/libfuego_go_a-GoBoardCheckPerformance.Po
#	source='GoBoardCheckPerformance.cpp' object='libfuego_go_a-GoBoardCheckPerformance.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoBoardCheckPerformance.obj `if test -f 'GoBoardCheckPerformance.cpp'; then $(CYGPATH_W) 'GoBoardCheckPerformance.cpp'; else $(CYGPATH_W) '$(srcdir)/GoBoardCheckPerformance.cpp'; fi`

libfuego_go_a-GoBoardHistory.o: GoBoardHistory.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoBoardHistory.o -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoBoardHistory.Tpo -c -o libfuego_go_a-GoBoardHistory.o `test -f 'GoBoardHistory.cpp' || echo '$(srcdir)/'`GoBoardHistory.cpp
	mv -f $(DEPDIR)/libfuego_go_a-GoBoardHistory.Tpo $(DEPDIR)/libfuego_go_a-GoBoardHistory.Po
#	source='GoBoardHistory.cpp' object='libfuego_go_a-GoBoardHistory.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoBoardHistory.o `test -f 'GoBoardHistory.cpp' || echo '$(srcdir)/'`GoBoardHistory.cpp

libfuego_go_a-GoBoardHistory.obj: GoBoardHistory.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoBoardHistory.obj -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoBoardHistory.Tpo -c -o libfuego_go_a-GoBoardHistory.obj `if test -f 'GoBoardHistory.cpp'; then $(CYGPATH_W) 'GoBoardHistory.cpp'; else $(CYGPATH_W) '$(srcdir)/GoBoardHistory.cpp'; fi`
	mv -f $(DEPDIR)/libfuego_go_a-GoBoardHistory.Tpo $(DEPDIR)/libfuego_go_a-GoBoardHistory.Po
#	source='GoBoardHistory.cpp' object='libfuego_go_a-GoBoardHistory.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoBoardHistory.obj `if test -f 'GoBoardHistory.cpp'; then $(CYGPATH_W) 'GoBoardHistory.cpp'; else $(CYGPATH_W) '$(srcdir)/GoBoardHistory.cpp'; fi`

libfuego_go_a-GoBoardRestorer.o: GoBoardRestorer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoBoardRestorer.o -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoBoardRestorer.Tpo -c -o libfuego_go_a-GoBoardRestorer.o `test -f 'GoBoardRestorer.cpp' || echo '$(srcdir)/'`GoBoardRestorer.cpp
	mv -f $(DEPDIR)/libfuego_go_a-GoBoardRestorer.Tpo $(DEPDIR)/libfuego_go_a-GoBoardRestorer.Po
#	source='GoBoardRestorer.cpp' object='libfuego_go_a-GoBoardRestorer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoBoardRestorer.o `test -f 'GoBoardRestorer.cpp' || echo '$(srcdir)/'`GoBoardRestorer.cpp

libfuego_go_a-GoBoardRestorer.obj: GoBoardRestorer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoBoardRestorer.obj -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoBoardRestorer.Tpo -c -o libfuego_go_a-GoBoardRestorer.obj `if test -f 'GoBoardRestorer.cpp'; then $(CYGPATH_W) 'GoBoardRestorer.cpp'; else $(CYGPATH_W) '$(srcdir)/GoBoardRestorer.cpp'; fi`
	mv -f $(DEPDIR)/libfuego_go_a-GoBoardRestorer.Tpo $(DEPDIR)/libfuego_go_a-GoBoardRestorer.Po
#	source='GoBoardRestorer.cpp' object='libfuego_go_a-GoBoardRestorer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoBoardRestorer.obj `if test -f 'GoBoardRestorer.cpp'; then $(CYGPATH_W) 'GoBoardRestorer.cpp'; else $(CYGPATH_W) '$(srcdir)/GoBoardRestorer.cpp'; fi`

libfuego_go_a-GoBoardSynchronizer.o: GoBoardSynchronizer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoBoardSynchronizer.o -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoBoardSynchronizer.Tpo -c -o libfuego_go_a-GoBoardSynchronizer.o `test -f 'GoBoardSynchronizer.cpp' || echo '$(srcdir)/'`GoBoardSynchronizer.cpp
	mv -f $(DEPDIR)/libfuego_go_a-GoBoardSynchronizer.Tpo $(DEPDIR)/libfuego_go_a-GoBoardSynchronizer.Po
#	source='GoBoardSynchronizer.cpp' object='libfuego_go_a-GoBoardSynchronizer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoBoardSynchronizer.o `test -f 'GoBoardSynchronizer.cpp' || echo '$(srcdir)/'`GoBoardSynchronizer.cpp

libfuego_go_a-GoBoardSynchronizer.obj: GoBoardSynchronizer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoBoardSynchronizer.obj -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoBoardSynchronizer.Tpo -c -o libfuego_go_a-GoBoardSynchronizer.obj `if test -f 'GoBoardSynchronizer.cpp'; then $(CYGPATH_W) 'GoBoardSynchronizer.cpp'; else $(CYGPATH_W) '$(srcdir)/GoBoardSynchronizer.cpp'; fi`
	mv -f $(DEPDIR)/libfuego_go_a-GoBoardSynchronizer.Tpo $(DEPDIR)/libfuego_go_a-GoBoardSynchronizer.Po
#	source='GoBoardSynchronizer.cpp' object='libfuego_go_a-GoBoardSynchronizer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoBoardSynchronizer.obj `if test -f 'GoBoardSynchronizer.cpp'; then $(CYGPATH_W) 'GoBoardSynchronizer.cpp'; else $(CYGPATH_W) '$(srcdir)/GoBoardSynchronizer.cpp'; fi`

libfuego_go_a-GoBoardUpdater.o: GoBoardUpdater.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoBoardUpdater.o -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoBoardUpdater.Tpo -c -o libfuego_go_a-GoBoardUpdater.o `test -f 'GoBoardUpdater.cpp' || echo '$(srcdir)/'`GoBoardUpdater.cpp
	mv -f $(DEPDIR)/libfuego_go_a-GoBoardUpdater.Tpo $(DEPDIR)/libfuego_go_a-GoBoardUpdater.Po
#	source='GoBoardUpdater.cpp' object='libfuego_go_a-GoBoardUpdater.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoBoardUpdater.o `test -f 'GoBoardUpdater.cpp' || echo '$(srcdir)/'`GoBoardUpdater.cpp

libfuego_go_a-GoBoardUpdater.obj: GoBoardUpdater.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoBoardUpdater.obj -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoBoardUpdater.Tpo -c -o libfuego_go_a-GoBoardUpdater.obj `if test -f 'GoBoardUpdater.cpp'; then $(CYGPATH_W) 'GoBoardUpdater.cpp'; else $(CYGPATH_W) '$(srcdir)/GoBoardUpdater.cpp'; fi`
	mv -f $(DEPDIR)/libfuego_go_a-GoBoardUpdater.Tpo $(DEPDIR)/libfuego_go_a-GoBoardUpdater.Po
#	source='GoBoardUpdater.cpp' object='libfuego_go_a-GoBoardUpdater.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoBoardUpdater.obj `if test -f 'GoBoardUpdater.cpp'; then $(CYGPATH_W) 'GoBoardUpdater.cpp'; else $(CYGPATH_W) '$(srcdir)/GoBoardUpdater.cpp'; fi`

libfuego_go_a-GoBoardUtil.o: GoBoardUtil.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoBoardUtil.o -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoBoardUtil.Tpo -c -o libfuego_go_a-GoBoardUtil.o `test -f 'GoBoardUtil.cpp' || echo '$(srcdir)/'`GoBoardUtil.cpp
	mv -f $(DEPDIR)/libfuego_go_a-GoBoardUtil.Tpo $(DEPDIR)/libfuego_go_a-GoBoardUtil.Po
#	source='GoBoardUtil.cpp' object='libfuego_go_a-GoBoardUtil.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoBoardUtil.o `test -f 'GoBoardUtil.cpp' || echo '$(srcdir)/'`GoBoardUtil.cpp

libfuego_go_a-GoBoardUtil.obj: GoBoardUtil.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoBoardUtil.obj -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoBoardUtil.Tpo -c -o libfuego_go_a-GoBoardUtil.obj `if test -f 'GoBoardUtil.cpp'; then $(CYGPATH_W) 'GoBoardUtil.cpp'; else $(CYGPATH_W) '$(srcdir)/GoBoardUtil.cpp'; fi`
	mv -f $(DEPDIR)/libfuego_go_a-GoBoardUtil.Tpo $(DEPDIR)/libfuego_go_a-GoBoardUtil.Po
#	source='GoBoardUtil.cpp' object='libfuego_go_a-GoBoardUtil.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoBoardUtil.obj `if test -f 'GoBoardUtil.cpp'; then $(CYGPATH_W) 'GoBoardUtil.cpp'; else $(CYGPATH_W) '$(srcdir)/GoBoardUtil.cpp'; fi`

libfuego_go_a-GoBook.o: GoBook.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoBook.o -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoBook.Tpo -c -o libfuego_go_a-GoBook.o `test -f 'GoBook.cpp' || echo '$(srcdir)/'`GoBook.cpp
	mv -f $(DEPDIR)/libfuego_go_a-GoBook.Tpo $(DEPDIR)/libfuego_go_a-GoBook.Po
#	source='GoBook.cpp' object='libfuego_go_a-GoBook.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoBook.o `test -f 'GoBook.cpp' || echo '$(srcdir)/'`GoBook.cpp

libfuego_go_a-GoBook.obj: GoBook.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoBook.obj -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoBook.Tpo -c -o libfuego_go_a-GoBook.obj `if test -f 'GoBook.cpp'; then $(CYGPATH_W) 'GoBook.cpp'; else $(CYGPATH_W) '$(srcdir)/GoBook.cpp'; fi`
	mv -f $(DEPDIR)/libfuego_go_a-GoBook.Tpo $(DEPDIR)/libfuego_go_a-GoBook.Po
#	source='GoBook.cpp' object='libfuego_go_a-GoBook.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoBook.obj `if test -f 'GoBook.cpp'; then $(CYGPATH_W) 'GoBook.cpp'; else $(CYGPATH_W) '$(srcdir)/GoBook.cpp'; fi`

libfuego_go_a-GoChain.o: GoChain.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoChain.o -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoChain.Tpo -c -o libfuego_go_a-GoChain.o `test -f 'GoChain.cpp' || echo '$(srcdir)/'`GoChain.cpp
	mv -f $(DEPDIR)/libfuego_go_a-GoChain.Tpo $(DEPDIR)/libfuego_go_a-GoChain.Po
#	source='GoChain.cpp' object='libfuego_go_a-GoChain.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoChain.o `test -f 'GoChain.cpp' || echo '$(srcdir)/'`GoChain.cpp

libfuego_go_a-GoChain.obj: GoChain.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoChain.obj -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoChain.Tpo -c -o libfuego_go_a-GoChain.obj `if test -f 'GoChain.cpp'; then $(CYGPATH_W) 'GoChain.cpp'; else $(CYGPATH_W) '$(srcdir)/GoChain.cpp'; fi`
	mv -f $(DEPDIR)/libfuego_go_a-GoChain.Tpo $(DEPDIR)/libfuego_go_a-GoChain.Po
#	source='GoChain.cpp' object='libfuego_go_a-GoChain.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoChain.obj `if test -f 'GoChain.cpp'; then $(CYGPATH_W) 'GoChain.cpp'; else $(CYGPATH_W) '$(srcdir)/GoChain.cpp'; fi`

libfuego_go_a-GoEyeCount.o: GoEyeCount.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoEyeCount.o -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoEyeCount.Tpo -c -o libfuego_go_a-GoEyeCount.o `test -f 'GoEyeCount.cpp' || echo '$(srcdir)/'`GoEyeCount.cpp
	mv -f $(DEPDIR)/libfuego_go_a-GoEyeCount.Tpo $(DEPDIR)/libfuego_go_a-GoEyeCount.Po
#	source='GoEyeCount.cpp' object='libfuego_go_a-GoEyeCount.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoEyeCount.o `test -f 'GoEyeCount.cpp' || echo '$(srcdir)/'`GoEyeCount.cpp

libfuego_go_a-GoEyeCount.obj: GoEyeCount.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoEyeCount.obj -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoEyeCount.Tpo -c -o libfuego_go_a-GoEyeCount.obj `if test -f 'GoEyeCount.cpp'; then $(CYGPATH_W) 'GoEyeCount.cpp'; else $(CYGPATH_W) '$(srcdir)/GoEyeCount.cpp'; fi`
	mv -f $(DEPDIR)/libfuego_go_a-GoEyeCount.Tpo $(DEPDIR)/libfuego_go_a-GoEyeCount.Po
#	source='GoEyeCount.cpp' object='libfuego_go_a-GoEyeCount.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoEyeCount.obj `if test -f 'GoEyeCount.cpp'; then $(CYGPATH_W) 'GoEyeCount.cpp'; else $(CYGPATH_W) '$(srcdir)/GoEyeCount.cpp'; fi`

libfuego_go_a-GoEyeUtil.o: GoEyeUtil.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoEyeUtil.o -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoEyeUtil.Tpo -c -o libfuego_go_a-GoEyeUtil.o `test -f 'GoEyeUtil.cpp' || echo '$(srcdir)/'`GoEyeUtil.cpp
	mv -f $(DEPDIR)/libfuego_go_a-GoEyeUtil.Tpo $(DEPDIR)/libfuego_go_a-GoEyeUtil.Po
#	source='GoEyeUtil.cpp' object='libfuego_go_a-GoEyeUtil.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoEyeUtil.o `test -f 'GoEyeUtil.cpp' || echo '$(srcdir)/'`GoEyeUtil.cpp

libfuego_go_a-GoEyeUtil.obj: GoEyeUtil.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoEyeUtil.obj -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoEyeUtil.Tpo -c -o libfuego_go_a-GoEyeUtil.obj `if test -f 'GoEyeUtil.cpp'; then $(CYGPATH_W) 'GoEyeUtil.cpp'; else $(CYGPATH_W) '$(srcdir)/GoEyeUtil.cpp'; fi`
	mv -f $(DEPDIR)/libfuego_go_a-GoEyeUtil.Tpo $(DEPDIR)/libfuego_go_a-GoEyeUtil.Po
#	source='GoEyeUtil.cpp' object='libfuego_go_a-GoEyeUtil.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoEyeUtil.obj `if test -f 'GoEyeUtil.cpp'; then $(CYGPATH_W) 'GoEyeUtil.cpp'; else $(CYGPATH_W) '$(srcdir)/GoEyeUtil.cpp'; fi`

libfuego_go_a-GoGame.o: GoGame.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoGame.o -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoGame.Tpo -c -o libfuego_go_a-GoGame.o `test -f 'GoGame.cpp' || echo '$(srcdir)/'`GoGame.cpp
	mv -f $(DEPDIR)/libfuego_go_a-GoGame.Tpo $(DEPDIR)/libfuego_go_a-GoGame.Po
#	source='GoGame.cpp' object='libfuego_go_a-GoGame.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoGame.o `test -f 'GoGame.cpp' || echo '$(srcdir)/'`GoGame.cpp

libfuego_go_a-GoGame.obj: GoGame.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoGame.obj -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoGame.Tpo -c -o libfuego_go_a-GoGame.obj `if test -f 'GoGame.cpp'; then $(CYGPATH_W) 'GoGame.cpp'; else $(CYGPATH_W) '$(srcdir)/GoGame.cpp'; fi`
	mv -f $(DEPDIR)/libfuego_go_a-GoGame.Tpo $(DEPDIR)/libfuego_go_a-GoGame.Po
#	source='GoGame.cpp' object='libfuego_go_a-GoGame.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoGame.obj `if test -f 'GoGame.cpp'; then $(CYGPATH_W) 'GoGame.cpp'; else $(CYGPATH_W) '$(srcdir)/GoGame.cpp'; fi`

libfuego_go_a-GoGtpCommandUtil.o: GoGtpCommandUtil.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoGtpCommandUtil.o -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoGtpCommandUtil.Tpo -c -o libfuego_go_a-GoGtpCommandUtil.o `test -f 'GoGtpCommandUtil.cpp' || echo '$(srcdir)/'`GoGtpCommandUtil.cpp
	mv -f $(DEPDIR)/libfuego_go_a-GoGtpCommandUtil.Tpo $(DEPDIR)/libfuego_go_a-GoGtpCommandUtil.Po
#	source='GoGtpCommandUtil.cpp' object='libfuego_go_a-GoGtpCommandUtil.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoGtpCommandUtil.o `test -f 'GoGtpCommandUtil.cpp' || echo '$(srcdir)/'`GoGtpCommandUtil.cpp

libfuego_go_a-GoGtpCommandUtil.obj: GoGtpCommandUtil.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoGtpCommandUtil.obj -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoGtpCommandUtil.Tpo -c -o libfuego_go_a-GoGtpCommandUtil.obj `if test -f 'GoGtpCommandUtil.cpp'; then $(CYGPATH_W) 'GoGtpCommandUtil.cpp'; else $(CYGPATH_W) '$(srcdir)/GoGtpCommandUtil.cpp'; fi`
	mv -f $(DEPDIR)/libfuego_go_a-GoGtpCommandUtil.Tpo $(DEPDIR)/libfuego_go_a-GoGtpCommandUtil.Po
#	source='GoGtpCommandUtil.cpp' object='libfuego_go_a-GoGtpCommandUtil.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoGtpCommandUtil.obj `if test -f 'GoGtpCommandUtil.cpp'; then $(CYGPATH_W) 'GoGtpCommandUtil.cpp'; else $(CYGPATH_W) '$(srcdir)/GoGtpCommandUtil.cpp'; fi`

libfuego_go_a-GoGtpEngine.o: GoGtpEngine.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoGtpEngine.o -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoGtpEngine.Tpo -c -o libfuego_go_a-GoGtpEngine.o `test -f 'GoGtpEngine.cpp' || echo '$(srcdir)/'`GoGtpEngine.cpp
	mv -f $(DEPDIR)/libfuego_go_a-GoGtpEngine.Tpo $(DEPDIR)/libfuego_go_a-GoGtpEngine.Po
#	source='GoGtpEngine.cpp' object='libfuego_go_a-GoGtpEngine.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoGtpEngine.o `test -f 'GoGtpEngine.cpp' || echo '$(srcdir)/'`GoGtpEngine.cpp

libfuego_go_a-GoGtpEngine.obj: GoGtpEngine.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoGtpEngine.obj -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoGtpEngine.Tpo -c -o libfuego_go_a-GoGtpEngine.obj `if test -f 'GoGtpEngine.cpp'; then $(CYGPATH_W) 'GoGtpEngine.cpp'; else $(CYGPATH_W) '$(srcdir)/GoGtpEngine.cpp'; fi`
	mv -f $(DEPDIR)/libfuego_go_a-GoGtpEngine.Tpo $(DEPDIR)/libfuego_go_a-GoGtpEngine.Po
#	source='GoGtpEngine.cpp' object='libfuego_go_a-GoGtpEngine.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoGtpEngine.obj `if test -f 'GoGtpEngine.cpp'; then $(CYGPATH_W) 'GoGtpEngine.cpp'; else $(CYGPATH_W) '$(srcdir)/GoGtpEngine.cpp'; fi`

libfuego_go_a-GoGtpExtraCommands.o: GoGtpExtraCommands.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoGtpExtraCommands.o -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoGtpExtraCommands.Tpo -c -o libfuego_go_a-GoGtpExtraCommands.o `test -f 'GoGtpExtraCommands.cpp' || echo '$(srcdir)/'`GoGtpExtraCommands.cpp
	mv -f $(DEPDIR)/libfuego_go_a-GoGtpExtraCommands.Tpo $(DEPDIR)/libfuego_go_a-GoGtpExtraCommands.Po
#	source='GoGtpExtraCommands.cpp' object='libfuego_go_a-GoGtpExtraCommands.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoGtpExtraCommands.o `test -f 'GoGtpExtraCommands.cpp' || echo '$(srcdir)/'`GoGtpExtraCommands.cpp

libfuego_go_a-GoGtpExtraCommands.obj: GoGtpExtraCommands.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoGtpExtraCommands.obj -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoGtpExtraCommands.Tpo -c -o libfuego_go_a-GoGtpExtraCommands.obj `if test -f 'GoGtpExtraCommands.cpp'; then $(CYGPATH_W) 'GoGtpExtraCommands.cpp'; else $(CYGPATH_W) '$(srcdir)/GoGtpExtraCommands.cpp'; fi`
	mv -f $(DEPDIR)/libfuego_go_a-GoGtpExtraCommands.Tpo $(DEPDIR)/libfuego_go_a-GoGtpExtraCommands.Po
#	source='GoGtpExtraCommands.cpp' object='libfuego_go_a-GoGtpExtraCommands.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoGtpExtraCommands.obj `if test -f 'GoGtpExtraCommands.cpp'; then $(CYGPATH_W) 'GoGtpExtraCommands.cpp'; else $(CYGPATH_W) '$(srcdir)/GoGtpExtraCommands.cpp'; fi`

libfuego_go_a-GoInfluence.o: GoInfluence.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoInfluence.o -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoInfluence.Tpo -c -o libfuego_go_a-GoInfluence.o `test -f 'GoInfluence.cpp' || echo '$(srcdir)/'`GoInfluence.cpp
	mv -f $(DEPDIR)/libfuego_go_a-GoInfluence.Tpo $(DEPDIR)/libfuego_go_a-GoInfluence.Po
#	source='GoInfluence.cpp' object='libfuego_go_a-GoInfluence.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoInfluence.o `test -f 'GoInfluence.cpp' || echo '$(srcdir)/'`GoInfluence.cpp

libfuego_go_a-GoInfluence.obj: GoInfluence.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoInfluence.obj -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoInfluence.Tpo -c -o libfuego_go_a-GoInfluence.obj `if test -f 'GoInfluence.cpp'; then $(CYGPATH_W) 'GoInfluence.cpp'; else $(CYGPATH_W) '$(srcdir)/GoInfluence.cpp'; fi`
	mv -f $(DEPDIR)/libfuego_go_a-GoInfluence.Tpo $(DEPDIR)/libfuego_go_a-GoInfluence.Po
#	source='GoInfluence.cpp' object='libfuego_go_a-GoInfluence.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoInfluence.obj `if test -f 'GoInfluence.cpp'; then $(CYGPATH_W) 'GoInfluence.cpp'; else $(CYGPATH_W) '$(srcdir)/GoInfluence.cpp'; fi`

libfuego_go_a-GoInit.o: GoInit.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoInit.o -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoInit.Tpo -c -o libfuego_go_a-GoInit.o `test -f 'GoInit.cpp' || echo '$(srcdir)/'`GoInit.cpp
	mv -f $(DEPDIR)/libfuego_go_a-GoInit.Tpo $(DEPDIR)/libfuego_go_a-GoInit.Po
#	source='GoInit.cpp' object='libfuego_go_a-GoInit.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoInit.o `test -f 'GoInit.cpp' || echo '$(srcdir)/'`GoInit.cpp

libfuego_go_a-GoInit.obj: GoInit.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoInit.obj -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoInit.Tpo -c -o libfuego_go_a-GoInit.obj `if test -f 'GoInit.cpp'; then $(CYGPATH_W) 'GoInit.cpp'; else $(CYGPATH_W) '$(srcdir)/GoInit.cpp'; fi`
	mv -f $(DEPDIR)/libfuego_go_a-GoInit.Tpo $(DEPDIR)/libfuego_go_a-GoInit.Po
#	source='GoInit.cpp' object='libfuego_go_a-GoInit.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoInit.obj `if test -f 'GoInit.cpp'; then $(CYGPATH_W) 'GoInit.cpp'; else $(CYGPATH_W) '$(srcdir)/GoInit.cpp'; fi`

libfuego_go_a-GoKomi.o: GoKomi.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoKomi.o -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoKomi.Tpo -c -o libfuego_go_a-GoKomi.o `test -f 'GoKomi.cpp' || echo '$(srcdir)/'`GoKomi.cpp
	mv -f $(DEPDIR)/libfuego_go_a-GoKomi.Tpo $(DEPDIR)/libfuego_go_a-GoKomi.Po
#	source='GoKomi.cpp' object='libfuego_go_a-GoKomi.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoKomi.o `test -f 'GoKomi.cpp' || echo '$(srcdir)/'`GoKomi.cpp

libfuego_go_a-GoKomi.obj: GoKomi.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoKomi.obj -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoKomi.Tpo -c -o libfuego_go_a-GoKomi.obj `if test -f 'GoKomi.cpp'; then $(CYGPATH_W) 'GoKomi.cpp'; else $(CYGPATH_W) '$(srcdir)/GoKomi.cpp'; fi`
	mv -f $(DEPDIR)/libfuego_go_a-GoKomi.Tpo $(DEPDIR)/libfuego_go_a-GoKomi.Po
#	source='GoKomi.cpp' object='libfuego_go_a-GoKomi.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoKomi.obj `if test -f 'GoKomi.cpp'; then $(CYGPATH_W) 'GoKomi.cpp'; else $(CYGPATH_W) '$(srcdir)/GoKomi.cpp'; fi`

libfuego_go_a-GoLadder.o: GoLadder.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoLadder.o -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoLadder.Tpo -c -o libfuego_go_a-GoLadder.o `test -f 'GoLadder.cpp' || echo '$(srcdir)/'`GoLadder.cpp
	mv -f $(DEPDIR)/libfuego_go_a-GoLadder.Tpo $(DEPDIR)/libfuego_go_a-GoLadder.Po
#	source='GoLadder.cpp' object='libfuego_go_a-GoLadder.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoLadder.o `test -f 'GoLadder.cpp' || echo '$(srcdir)/'`GoLadder.cpp

libfuego_go_a-GoLadder.obj: GoLadder.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoLadder.obj -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoLadder.Tpo -c -o libfuego_go_a-GoLadder.obj `if test -f 'GoLadder.cpp'; then $(CYGPATH_W) 'GoLadder.cpp'; else $(CYGPATH_W) '$(srcdir)/GoLadder.cpp'; fi`
	mv -f $(DEPDIR)/libfuego_go_a-GoLadder.Tpo $(DEPDIR)/libfuego_go_a-GoLadder.Po
#	source='GoLadder.cpp' object='libfuego_go_a-GoLadder.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoLadder.obj `if test -f 'GoLadder.cpp'; then $(CYGPATH_W) 'GoLadder.cpp'; else $(CYGPATH_W) '$(srcdir)/GoLadder.cpp'; fi`

libfuego_go_a-GoMotive.o: GoMotive.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoMotive.o -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoMotive.Tpo -c -o libfuego_go_a-GoMotive.o `test -f 'GoMotive.cpp' || echo '$(srcdir)/'`GoMotive.cpp
	mv -f $(DEPDIR)/libfuego_go_a-GoMotive.Tpo $(DEPDIR)/libfuego_go_a-GoMotive.Po
#	source='GoMotive.cpp' object='libfuego_go_a-GoMotive.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoMotive.o `test -f 'GoMotive.cpp' || echo '$(srcdir)/'`GoMotive.cpp

libfuego_go_a-GoMotive.obj: GoMotive.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoMotive.obj -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoMotive.Tpo -c -o libfuego_go_a-GoMotive.obj `if test -f 'GoMotive.cpp'; then $(CYGPATH_W) 'GoMotive.cpp'; else $(CYGPATH_W) '$(srcdir)/GoMotive.cpp'; fi`
	mv -f $(DEPDIR)/libfuego_go_a-GoMotive.Tpo $(DEPDIR)/libfuego_go_a-GoMotive.Po
#	source='GoMotive.cpp' object='libfuego_go_a-GoMotive.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoMotive.obj `if test -f 'GoMotive.cpp'; then $(CYGPATH_W) 'GoMotive.cpp'; else $(CYGPATH_W) '$(srcdir)/GoMotive.cpp'; fi`

libfuego_go_a-GoNodeUtil.o: GoNodeUtil.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoNodeUtil.o -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoNodeUtil.Tpo -c -o libfuego_go_a-GoNodeUtil.o `test -f 'GoNodeUtil.cpp' || echo '$(srcdir)/'`GoNodeUtil.cpp
	mv -f $(DEPDIR)/libfuego_go_a-GoNodeUtil.Tpo $(DEPDIR)/libfuego_go_a-GoNodeUtil.Po
#	source='GoNodeUtil.cpp' object='libfuego_go_a-GoNodeUtil.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoNodeUtil.o `test -f 'GoNodeUtil.cpp' || echo '$(srcdir)/'`GoNodeUtil.cpp

libfuego_go_a-GoNodeUtil.obj: GoNodeUtil.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoNodeUtil.obj -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoNodeUtil.Tpo -c -o libfuego_go_a-GoNodeUtil.obj `if test -f 'GoNodeUtil.cpp'; then $(CYGPATH_W) 'GoNodeUtil.cpp'; else $(CYGPATH_W) '$(srcdir)/GoNodeUtil.cpp'; fi`
	mv -f $(DEPDIR)/libfuego_go_a-GoNodeUtil.Tpo $(DEPDIR)/libfuego_go_a-GoNodeUtil.Po
#	source='GoNodeUtil.cpp' object='libfuego_go_a-GoNodeUtil.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoNodeUtil.obj `if test -f 'GoNodeUtil.cpp'; then $(CYGPATH_W) 'GoNodeUtil.cpp'; else $(CYGPATH_W) '$(srcdir)/GoNodeUtil.cpp'; fi`

libfuego_go_a-GoPlayer.o: GoPlayer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoPlayer.o -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoPlayer.Tpo -c -o libfuego_go_a-GoPlayer.o `test -f 'GoPlayer.cpp' || echo '$(srcdir)/'`GoPlayer.cpp
	mv -f $(DEPDIR)/libfuego_go_a-GoPlayer.Tpo $(DEPDIR)/libfuego_go_a-GoPlayer.Po
#	source='GoPlayer.cpp' object='libfuego_go_a-GoPlayer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoPlayer.o `test -f 'GoPlayer.cpp' || echo '$(srcdir)/'`GoPlayer.cpp

libfuego_go_a-GoPlayer.obj: GoPlayer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoPlayer.obj -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoPlayer.Tpo -c -o libfuego_go_a-GoPlayer.obj `if test -f 'GoPlayer.cpp'; then $(CYGPATH_W) 'GoPlayer.cpp'; else $(CYGPATH_W) '$(srcdir)/GoPlayer.cpp'; fi`
	mv -f $(DEPDIR)/libfuego_go_a-GoPlayer.Tpo $(DEPDIR)/libfuego_go_a-GoPlayer.Po
#	source='GoPlayer.cpp' object='libfuego_go_a-GoPlayer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoPlayer.obj `if test -f 'GoPlayer.cpp'; then $(CYGPATH_W) 'GoPlayer.cpp'; else $(CYGPATH_W) '$(srcdir)/GoPlayer.cpp'; fi`

libfuego_go_a-GoPlayerMove.o: GoPlayerMove.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoPlayerMove.o -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoPlayerMove.Tpo -c -o libfuego_go_a-GoPlayerMove.o `test -f 'GoPlayerMove.cpp' || echo '$(srcdir)/'`GoPlayerMove.cpp
	mv -f $(DEPDIR)/libfuego_go_a-GoPlayerMove.Tpo $(DEPDIR)/libfuego_go_a-GoPlayerMove.Po
#	source='GoPlayerMove.cpp' object='libfuego_go_a-GoPlayerMove.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoPlayerMove.o `test -f 'GoPlayerMove.cpp' || echo '$(srcdir)/'`GoPlayerMove.cpp

libfuego_go_a-GoPlayerMove.obj: GoPlayerMove.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoPlayerMove.obj -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoPlayerMove.Tpo -c -o libfuego_go_a-GoPlayerMove.obj `if test -f 'GoPlayerMove.cpp'; then $(CYGPATH_W) 'GoPlayerMove.cpp'; else $(CYGPATH_W) '$(srcdir)/GoPlayerMove.cpp'; fi`
	mv -f $(DEPDIR)/libfuego_go_a-GoPlayerMove.Tpo $(DEPDIR)/libfuego_go_a-GoPlayerMove.Po
#	source='GoPlayerMove.cpp' object='libfuego_go_a-GoPlayerMove.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoPlayerMove.obj `if test -f 'GoPlayerMove.cpp'; then $(CYGPATH_W) 'GoPlayerMove.cpp'; else $(CYGPATH_W) '$(srcdir)/GoPlayerMove.cpp'; fi`

libfuego_go_a-GoRegion.o: GoRegion.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoRegion.o -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoRegion.Tpo -c -o libfuego_go_a-GoRegion.o `test -f 'GoRegion.cpp' || echo '$(srcdir)/'`GoRegion.cpp
	mv -f $(DEPDIR)/libfuego_go_a-GoRegion.Tpo $(DEPDIR)/libfuego_go_a-GoRegion.Po
#	source='GoRegion.cpp' object='libfuego_go_a-GoRegion.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoRegion.o `test -f 'GoRegion.cpp' || echo '$(srcdir)/'`GoRegion.cpp

libfuego_go_a-GoRegion.obj: GoRegion.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoRegion.obj -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoRegion.Tpo -c -o libfuego_go_a-GoRegion.obj `if test -f 'GoRegion.cpp'; then $(CYGPATH_W) 'GoRegion.cpp'; else $(CYGPATH_W) '$(srcdir)/GoRegion.cpp'; fi`
	mv -f $(DEPDIR)/libfuego_go_a-GoRegion.Tpo $(DEPDIR)/libfuego_go_a-GoRegion.Po
#	source='GoRegion.cpp' object='libfuego_go_a-GoRegion.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoRegion.obj `if test -f 'GoRegion.cpp'; then $(CYGPATH_W) 'GoRegion.cpp'; else $(CYGPATH_W) '$(srcdir)/GoRegion.cpp'; fi`

libfuego_go_a-GoRegionBoard.o: GoRegionBoard.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoRegionBoard.o -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoRegionBoard.Tpo -c -o libfuego_go_a-GoRegionBoard.o `test -f 'GoRegionBoard.cpp' || echo '$(srcdir)/'`GoRegionBoard.cpp
	mv -f $(DEPDIR)/libfuego_go_a-GoRegionBoard.Tpo $(DEPDIR)/libfuego_go_a-GoRegionBoard.Po
#	source='GoRegionBoard.cpp' object='libfuego_go_a-GoRegionBoard.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoRegionBoard.o `test -f 'GoRegionBoard.cpp' || echo '$(srcdir)/'`GoRegionBoard.cpp

libfuego_go_a-GoRegionBoard.obj: GoRegionBoard.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoRegionBoard.obj -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoRegionBoard.Tpo -c -o libfuego_go_a-GoRegionBoard.obj `if test -f 'GoRegionBoard.cpp'; then $(CYGPATH_W) 'GoRegionBoard.cpp'; else $(CYGPATH_W) '$(srcdir)/GoRegionBoard.cpp'; fi`
	mv -f $(DEPDIR)/libfuego_go_a-GoRegionBoard.Tpo $(DEPDIR)/libfuego_go_a-GoRegionBoard.Po
#	source='GoRegionBoard.cpp' object='libfuego_go_a-GoRegionBoard.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoRegionBoard.obj `if test -f 'GoRegionBoard.cpp'; then $(CYGPATH_W) 'GoRegionBoard.cpp'; else $(CYGPATH_W) '$(srcdir)/GoRegionBoard.cpp'; fi`

libfuego_go_a-GoRegionUtil.o: GoRegionUtil.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoRegionUtil.o -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoRegionUtil.Tpo -c -o libfuego_go_a-GoRegionUtil.o `test -f 'GoRegionUtil.cpp' || echo '$(srcdir)/'`GoRegionUtil.cpp
	mv -f $(DEPDIR)/libfuego_go_a-GoRegionUtil.Tpo $(DEPDIR)/libfuego_go_a-GoRegionUtil.Po
#	source='GoRegionUtil.cpp' object='libfuego_go_a-GoRegionUtil.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoRegionUtil.o `test -f 'GoRegionUtil.cpp' || echo '$(srcdir)/'`GoRegionUtil.cpp

libfuego_go_a-GoRegionUtil.obj: GoRegionUtil.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoRegionUtil.obj -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoRegionUtil.Tpo -c -o libfuego_go_a-GoRegionUtil.obj `if test -f 'GoRegionUtil.cpp'; then $(CYGPATH_W) 'GoRegionUtil.cpp'; else $(CYGPATH_W) '$(srcdir)/GoRegionUtil.cpp'; fi`
	mv -f $(DEPDIR)/libfuego_go_a-GoRegionUtil.Tpo $(DEPDIR)/libfuego_go_a-GoRegionUtil.Po
#	source='GoRegionUtil.cpp' object='libfuego_go_a-GoRegionUtil.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoRegionUtil.obj `if test -f 'GoRegionUtil.cpp'; then $(CYGPATH_W) 'GoRegionUtil.cpp'; else $(CYGPATH_W) '$(srcdir)/GoRegionUtil.cpp'; fi`

libfuego_go_a-GoRules.o: GoRules.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoRules.o -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoRules.Tpo -c -o libfuego_go_a-GoRules.o `test -f 'GoRules.cpp' || echo '$(srcdir)/'`GoRules.cpp
	mv -f $(DEPDIR)/libfuego_go_a-GoRules.Tpo $(DEPDIR)/libfuego_go_a-GoRules.Po
#	source='GoRules.cpp' object='libfuego_go_a-GoRules.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoRules.o `test -f 'GoRules.cpp' || echo '$(srcdir)/'`GoRules.cpp

libfuego_go_a-GoRules.obj: GoRules.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoRules.obj -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoRules.Tpo -c -o libfuego_go_a-GoRules.obj `if test -f 'GoRules.cpp'; then $(CYGPATH_W) 'GoRules.cpp'; else $(CYGPATH_W) '$(srcdir)/GoRules.cpp'; fi`
	mv -f $(DEPDIR)/libfuego_go_a-GoRules.Tpo $(DEPDIR)/libfuego_go_a-GoRules.Po
#	source='GoRules.cpp' object='libfuego_go_a-GoRules.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoRules.obj `if test -f 'GoRules.cpp'; then $(CYGPATH_W) 'GoRules.cpp'; else $(CYGPATH_W) '$(srcdir)/GoRules.cpp'; fi`

libfuego_go_a-GoSafetyCommands.o: GoSafetyCommands.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoSafetyCommands.o -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoSafetyCommands.Tpo -c -o libfuego_go_a-GoSafetyCommands.o `test -f 'GoSafetyCommands.cpp' || echo '$(srcdir)/'`GoSafetyCommands.cpp
	mv -f $(DEPDIR)/libfuego_go_a-GoSafetyCommands.Tpo $(DEPDIR)/libfuego_go_a-GoSafetyCommands.Po
#	source='GoSafetyCommands.cpp' object='libfuego_go_a-GoSafetyCommands.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoSafetyCommands.o `test -f 'GoSafetyCommands.cpp' || echo '$(srcdir)/'`GoSafetyCommands.cpp

libfuego_go_a-GoSafetyCommands.obj: GoSafetyCommands.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoSafetyCommands.obj -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoSafetyCommands.Tpo -c -o libfuego_go_a-GoSafetyCommands.obj `if test -f 'GoSafetyCommands.cpp'; then $(CYGPATH_W) 'GoSafetyCommands.cpp'; else $(CYGPATH_W) '$(srcdir)/GoSafetyCommands.cpp'; fi`
	mv -f $(DEPDIR)/libfuego_go_a-GoSafetyCommands.Tpo $(DEPDIR)/libfuego_go_a-GoSafetyCommands.Po
#	source='GoSafetyCommands.cpp' object='libfuego_go_a-GoSafetyCommands.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoSafetyCommands.obj `if test -f 'GoSafetyCommands.cpp'; then $(CYGPATH_W) 'GoSafetyCommands.cpp'; else $(CYGPATH_W) '$(srcdir)/GoSafetyCommands.cpp'; fi`

libfuego_go_a-GoSafetySolver.o: GoSafetySolver.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoSafetySolver.o -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoSafetySolver.Tpo -c -o libfuego_go_a-GoSafetySolver.o `test -f 'GoSafetySolver.cpp' || echo '$(srcdir)/'`GoSafetySolver.cpp
	mv -f $(DEPDIR)/libfuego_go_a-GoSafetySolver.Tpo $(DEPDIR)/libfuego_go_a-GoSafetySolver.Po
#	source='GoSafetySolver.cpp' object='libfuego_go_a-GoSafetySolver.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoSafetySolver.o `test -f 'GoSafetySolver.cpp' || echo '$(srcdir)/'`GoSafetySolver.cpp

libfuego_go_a-GoSafetySolver.obj: GoSafetySolver.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoSafetySolver.obj -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoSafetySolver.Tpo -c -o libfuego_go_a-GoSafetySolver.obj `if test -f 'GoSafetySolver.cpp'; then $(CYGPATH_W) 'GoSafetySolver.cpp'; else $(CYGPATH_W) '$(srcdir)/GoSafetySolver.cpp'; fi`
	mv -f $(DEPDIR)/libfuego_go_a-GoSafetySolver.Tpo $(DEPDIR)/libfuego_go_a-GoSafetySolver.Po
#	source='GoSafetySolver.cpp' object='libfuego_go_a-GoSafetySolver.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoSafetySolver.obj `if test -f 'GoSafetySolver.cpp'; then $(CYGPATH_W) 'GoSafetySolver.cpp'; else $(CYGPATH_W) '$(srcdir)/GoSafetySolver.cpp'; fi`

libfuego_go_a-GoSafetyUtil.o: GoSafetyUtil.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoSafetyUtil.o -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoSafetyUtil.Tpo -c -o libfuego_go_a-GoSafetyUtil.o `test -f 'GoSafetyUtil.cpp' || echo '$(srcdir)/'`GoSafetyUtil.cpp
	mv -f $(DEPDIR)/libfuego_go_a-GoSafetyUtil.Tpo $(DEPDIR)/libfuego_go_a-GoSafetyUtil.Po
#	source='GoSafetyUtil.cpp' object='libfuego_go_a-GoSafetyUtil.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoSafetyUtil.o `test -f 'GoSafetyUtil.cpp' || echo '$(srcdir)/'`GoSafetyUtil.cpp

libfuego_go_a-GoSafetyUtil.obj: GoSafetyUtil.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoSafetyUtil.obj -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoSafetyUtil.Tpo -c -o libfuego_go_a-GoSafetyUtil.obj `if test -f 'GoSafetyUtil.cpp'; then $(CYGPATH_W) 'GoSafetyUtil.cpp'; else $(CYGPATH_W) '$(srcdir)/GoSafetyUtil.cpp'; fi`
	mv -f $(DEPDIR)/libfuego_go_a-GoSafetyUtil.Tpo $(DEPDIR)/libfuego_go_a-GoSafetyUtil.Po
#	source='GoSafetyUtil.cpp' object='libfuego_go_a-GoSafetyUtil.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoSafetyUtil.obj `if test -f 'GoSafetyUtil.cpp'; then $(CYGPATH_W) 'GoSafetyUtil.cpp'; else $(CYGPATH_W) '$(srcdir)/GoSafetyUtil.cpp'; fi`

libfuego_go_a-GoSearch.o: GoSearch.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoSearch.o -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoSearch.Tpo -c -o libfuego_go_a-GoSearch.o `test -f 'GoSearch.cpp' || echo '$(srcdir)/'`GoSearch.cpp
	mv -f $(DEPDIR)/libfuego_go_a-GoSearch.Tpo $(DEPDIR)/libfuego_go_a-GoSearch.Po
#	source='GoSearch.cpp' object='libfuego_go_a-GoSearch.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoSearch.o `test -f 'GoSearch.cpp' || echo '$(srcdir)/'`GoSearch.cpp

libfuego_go_a-GoSearch.obj: GoSearch.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoSearch.obj -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoSearch.Tpo -c -o libfuego_go_a-GoSearch.obj `if test -f 'GoSearch.cpp'; then $(CYGPATH_W) 'GoSearch.cpp'; else $(CYGPATH_W) '$(srcdir)/GoSearch.cpp'; fi`
	mv -f $(DEPDIR)/libfuego_go_a-GoSearch.Tpo $(DEPDIR)/libfuego_go_a-GoSearch.Po
#	source='GoSearch.cpp' object='libfuego_go_a-GoSearch.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoSearch.obj `if test -f 'GoSearch.cpp'; then $(CYGPATH_W) 'GoSearch.cpp'; else $(CYGPATH_W) '$(srcdir)/GoSearch.cpp'; fi`

libfuego_go_a-GoSetupUtil.o: GoSetupUtil.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoSetupUtil.o -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoSetupUtil.Tpo -c -o libfuego_go_a-GoSetupUtil.o `test -f 'GoSetupUtil.cpp' || echo '$(srcdir)/'`GoSetupUtil.cpp
	mv -f $(DEPDIR)/libfuego_go_a-GoSetupUtil.Tpo $(DEPDIR)/libfuego_go_a-GoSetupUtil.Po
#	source='GoSetupUtil.cpp' object='libfuego_go_a-GoSetupUtil.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoSetupUtil.o `test -f 'GoSetupUtil.cpp' || echo '$(srcdir)/'`GoSetupUtil.cpp

libfuego_go_a-GoSetupUtil.obj: GoSetupUtil.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoSetupUtil.obj -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoSetupUtil.Tpo -c -o libfuego_go_a-GoSetupUtil.obj `if test -f 'GoSetupUtil.cpp'; then $(CYGPATH_W) 'GoSetupUtil.cpp'; else $(CYGPATH_W) '$(srcdir)/GoSetupUtil.cpp'; fi`
	mv -f $(DEPDIR)/libfuego_go_a-GoSetupUtil.Tpo $(DEPDIR)/libfuego_go_a-GoSetupUtil.Po
#	source='GoSetupUtil.cpp' object='libfuego_go_a-GoSetupUtil.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoSetupUtil.obj `if test -f 'GoSetupUtil.cpp'; then $(CYGPATH_W) 'GoSetupUtil.cpp'; else $(CYGPATH_W) '$(srcdir)/GoSetupUtil.cpp'; fi`

libfuego_go_a-GoStaticLadder.o: GoStaticLadder.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoStaticLadder.o -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoStaticLadder.Tpo -c -o libfuego_go_a-GoStaticLadder.o `test -f 'GoStaticLadder.cpp' || echo '$(srcdir)/'`GoStaticLadder.cpp
	mv -f $(DEPDIR)/libfuego_go_a-GoStaticLadder.Tpo $(DEPDIR)/libfuego_go_a-GoStaticLadder.Po
#	source='GoStaticLadder.cpp' object='libfuego_go_a-GoStaticLadder.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoStaticLadder.o `test -f 'GoStaticLadder.cpp' || echo '$(srcdir)/'`GoStaticLadder.cpp

libfuego_go_a-GoStaticLadder.obj: GoStaticLadder.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoStaticLadder.obj -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoStaticLadder.Tpo -c -o libfuego_go_a-GoStaticLadder.obj `if test -f 'GoStaticLadder.cpp'; then $(CYGPATH_W) 'GoStaticLadder.cpp'; else $(CYGPATH_W) '$(srcdir)/GoStaticLadder.cpp'; fi`
	mv -f $(DEPDIR)/libfuego_go_a-GoStaticLadder.Tpo $(DEPDIR)/libfuego_go_a-GoStaticLadder.Po
#	source='GoStaticLadder.cpp' object='libfuego_go_a-GoStaticLadder.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoStaticLadder.obj `if test -f 'GoStaticLadder.cpp'; then $(CYGPATH_W) 'GoStaticLadder.cpp'; else $(CYGPATH_W) '$(srcdir)/GoStaticLadder.cpp'; fi`

libfuego_go_a-GoStaticSafetySolver.o: GoStaticSafetySolver.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoStaticSafetySolver.o -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoStaticSafetySolver.Tpo -c -o libfuego_go_a-GoStaticSafetySolver.o `test -f 'GoStaticSafetySolver.cpp' || echo '$(srcdir)/'`GoStaticSafetySolver.cpp
	mv -f $(DEPDIR)/libfuego_go_a-GoStaticSafetySolver.Tpo $(DEPDIR)/libfuego_go_a-GoStaticSafetySolver.Po
#	source='GoStaticSafetySolver.cpp' object='libfuego_go_a-GoStaticSafetySolver.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoStaticSafetySolver.o `test -f 'GoStaticSafetySolver.cpp' || echo '$(srcdir)/'`GoStaticSafetySolver.cpp

libfuego_go_a-GoStaticSafetySolver.obj: GoStaticSafetySolver.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoStaticSafetySolver.obj -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoStaticSafetySolver.Tpo -c -o libfuego_go_a-GoStaticSafetySolver.obj `if test -f 'GoStaticSafetySolver.cpp'; then $(CYGPATH_W) 'GoStaticSafetySolver.cpp'; else $(CYGPATH_W) '$(srcdir)/GoStaticSafetySolver.cpp'; fi`
	mv -f $(DEPDIR)/libfuego_go_a-GoStaticSafetySolver.Tpo $(DEPDIR)/libfuego_go_a-GoStaticSafetySolver.Po
#	source='GoStaticSafetySolver.cpp' object='libfuego_go_a-GoStaticSafetySolver.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoStaticSafetySolver.obj `if test -f 'GoStaticSafetySolver.cpp'; then $(CYGPATH_W) 'GoStaticSafetySolver.cpp'; else $(CYGPATH_W) '$(srcdir)/GoStaticSafetySolver.cpp'; fi`

libfuego_go_a-GoTimeControl.o: GoTimeControl.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoTimeControl.o -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoTimeControl.Tpo -c -o libfuego_go_a-GoTimeControl.o `test -f 'GoTimeControl.cpp' || echo '$(srcdir)/'`GoTimeControl.cpp
	mv -f $(DEPDIR)/libfuego_go_a-GoTimeControl.Tpo $(DEPDIR)/libfuego_go_a-GoTimeControl.Po
#	source='GoTimeControl.cpp' object='libfuego_go_a-GoTimeControl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoTimeControl.o `test -f 'GoTimeControl.cpp' || echo '$(srcdir)/'`GoTimeControl.cpp

libfuego_go_a-GoTimeControl.obj: GoTimeControl.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoTimeControl.obj -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoTimeControl.Tpo -c -o libfuego_go_a-GoTimeControl.obj `if test -f 'GoTimeControl.cpp'; then $(CYGPATH_W) 'GoTimeControl.cpp'; else $(CYGPATH_W) '$(srcdir)/GoTimeControl.cpp'; fi`
	mv -f $(DEPDIR)/libfuego_go_a-GoTimeControl.Tpo $(DEPDIR)/libfuego_go_a-GoTimeControl.Po
#	source='GoTimeControl.cpp' object='libfuego_go_a-GoTimeControl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoTimeControl.obj `if test -f 'GoTimeControl.cpp'; then $(CYGPATH_W) 'GoTimeControl.cpp'; else $(CYGPATH_W) '$(srcdir)/GoTimeControl.cpp'; fi`

libfuego_go_a-GoTimeSettings.o: GoTimeSettings.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoTimeSettings.o -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoTimeSettings.Tpo -c -o libfuego_go_a-GoTimeSettings.o `test -f 'GoTimeSettings.cpp' || echo '$(srcdir)/'`GoTimeSettings.cpp
	mv -f $(DEPDIR)/libfuego_go_a-GoTimeSettings.Tpo $(DEPDIR)/libfuego_go_a-GoTimeSettings.Po
#	source='GoTimeSettings.cpp' object='libfuego_go_a-GoTimeSettings.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoTimeSettings.o `test -f 'GoTimeSettings.cpp' || echo '$(srcdir)/'`GoTimeSettings.cpp

libfuego_go_a-GoTimeSettings.obj: GoTimeSettings.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoTimeSettings.obj -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoTimeSettings.Tpo -c -o libfuego_go_a-GoTimeSettings.obj `if test -f 'GoTimeSettings.cpp'; then $(CYGPATH_W) 'GoTimeSettings.cpp'; else $(CYGPATH_W) '$(srcdir)/GoTimeSettings.cpp'; fi`
	mv -f $(DEPDIR)/libfuego_go_a-GoTimeSettings.Tpo $(DEPDIR)/libfuego_go_a-GoTimeSettings.Po
#	source='GoTimeSettings.cpp' object='libfuego_go_a-GoTimeSettings.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoTimeSettings.obj `if test -f 'GoTimeSettings.cpp'; then $(CYGPATH_W) 'GoTimeSettings.cpp'; else $(CYGPATH_W) '$(srcdir)/GoTimeSettings.cpp'; fi`

libfuego_go_a-GoUtil.o: GoUtil.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoUtil.o -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoUtil.Tpo -c -o libfuego_go_a-GoUtil.o `test -f 'GoUtil.cpp' || echo '$(srcdir)/'`GoUtil.cpp
	mv -f $(DEPDIR)/libfuego_go_a-GoUtil.Tpo $(DEPDIR)/libfuego_go_a-GoUtil.Po
#	source='GoUtil.cpp' object='libfuego_go_a-GoUtil.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoUtil.o `test -f 'GoUtil.cpp' || echo '$(srcdir)/'`GoUtil.cpp

libfuego_go_a-GoUtil.obj: GoUtil.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfuego_go_a-GoUtil.obj -MD -MP -MF $(DEPDIR)/libfuego_go_a-GoUtil.Tpo -c -o libfuego_go_a-GoUtil.obj `if test -f 'GoUtil.cpp'; then $(CYGPATH_W) 'GoUtil.cpp'; else $(CYGPATH_W) '$(srcdir)/GoUtil.cpp'; fi`
	mv -f $(DEPDIR)/libfuego_go_a-GoUtil.Tpo $(DEPDIR)/libfuego_go_a-GoUtil.Po
#	source='GoUtil.cpp' object='libfuego_go_a-GoUtil.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfuego_go_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfuego_go_a-GoUtil.obj `if test -f 'GoUtil.cpp'; then $(CYGPATH_W) 'GoUtil.cpp'; else $(CYGPATH_W) '$(srcdir)/GoUtil.cpp'; fi`

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(HEADERS)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-noinstLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-exec-am:

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-noinstLIBRARIES ctags distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
